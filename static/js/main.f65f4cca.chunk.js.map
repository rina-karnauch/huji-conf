{"version":3,"sources":["components/Header.js","components/Sidebar.js","components/Upnav.js","components/ConfessionTable/ConfessionTableTitle.js","components/ConfessionTable/ConfessionTextField.js","components/ConfessionTable/NumberSwitch.js","components/ConfessionsTable.js","components/EmergencyTable.js","components/Table.js","components/Footer.js","components/MainContent.js","App.js","index.js"],"names":["Header","className","onClick","window","open","Sidebar","history","useHistory","activeItemId","onSelect","itemId","push","items","title","elemBefore","name","fontSize","Upnav","ConfessionTableTitle","Grid","item","xs","CssTextField","styled","TextField","color","borderBottomColor","borderColor","ConfessionTextField","forwardRef","props","ref","useState","confession","setConfession","useImperativeHandle","clear","console","log","fullWidth","multiline","id","size","rows","label","variant","value","onChange","event","target","onSaveConfessionText","inputProps","CostumedSwitch","Switch","theme","backgroundColor","alpha","palette","action","hoverOpacity","NumberSwitch","disabled","setDisabled","text","setText","onChangeOfTextBox","onCommentToExistingConfession","container","justifyContent","alignItems","handleConfessionNumberBox","type","ColorButton","Button","getContrastText","ConfessionsTable","ID","setID","numberSwitchRef","useRef","confessionTextRef","spacing","data","confessionJSON","isComment","formData","FormData","append","constructFormData","fetch","body","method","mode","JSON","stringify","confessions","headers","current","endIcon","EmergencyTable","Table","exact","path","to","component","Footer","href","MainContent","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f65f4cca.chunk.js","sourcesContent":["import './Header.css';\nimport {FcLock} from 'react-icons/fc';\nimport {GiNightSky} from 'react-icons/gi';\nimport {FaFacebook} from 'react-icons/fa'\nimport * as React from \"react\";\n\n\nconst Header = () => {\n    return (\n        <div className=\"header-line\">\n            <FcLock className=\"lock-icon\"/>\n            <div className=\"title-text\">HUJI Confessions</div>\n            <div className=\"side-icons\">\n                <GiNightSky className=\"night-mode\" onClick=\"\"/>\n                <span className=\"space\"/>\n                <FaFacebook className=\"facebook-link\"\n                            onClick={() => window.open(\"https://www.facebook.com/ConfessionsHUJI/\")}/>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import './Sidebar.css';\nimport 'react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css';\nimport {Navigation} from 'react-minimal-side-navigation';\nimport {AiTwotoneFileText} from 'react-icons/ai';\nimport {HiPhone} from 'react-icons/hi';\nimport {useHistory} from \"react-router-dom\";\n\n\nfunction Sidebar() {\n\n    const history = useHistory();\n\n    return (\n        <div className=\"side-bar\">\n            <Navigation\n                // you can use your own router's api to get pathname\n                activeItemId=\"/management/members\"\n                onSelect={({itemId}) => {\n                    history.push(itemId);\n                }}\n                items={[\n                    {\n                        title: 'write a confession',\n                        itemId: '/',\n                        // you can use your own custom Icon component as well\n                        // icon is optional\n                        elemBefore: () => <AiTwotoneFileText name=\"home\" fontSize=\"24px\"/>,\n                    },\n                    {\n                        title: 'reach hotlines',\n                        itemId: '/hotlines',\n                        // you can use your own custom Icon component as well\n                        // icon is optional\n                        elemBefore: () => <HiPhone name=\"hotlines\" fontSize=\"24px\"/>,\n                    },\n                ]}\n            />\n        </div>\n    );\n}\n\nexport default Sidebar;","import './Upnav.css';\nimport {Navigation} from 'react-minimal-side-navigation';\nimport 'react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css';\nimport {AiTwotoneFileText} from 'react-icons/ai';\nimport {HiPhone} from 'react-icons/hi';\nimport {useHistory} from \"react-router-dom\";\n\n\nconst Upnav = () => {\n\n    const history = useHistory();\n    return (\n        <div className=\"up-nav\">\n            <Navigation\n                // you can use your own router's api to get pathname\n                activeItemId=\"/management/members\"\n                onSelect={({itemId}) => {\n                    history.push(itemId);\n                }}\n                items={[\n                    {\n                        title: 'write a confessions',\n                        itemId: '/',\n                        // you can use your own custom Icon component as well\n                        // icon is optional\n                        elemBefore: () => <AiTwotoneFileText name=\"home\"/>,\n                    },\n                    {\n                        title: 'reach hotlines',\n                        itemId: '/hotlines',\n                        // you can use your own custom Icon component as well\n                        // icon is optional\n                        elemBefore: () => <HiPhone name=\"hotlines\"/>,\n                    },\n                ]}\n            />\n        </div>\n    );\n}\n\nexport default Upnav;","import EmailTwoToneIcon from \"@mui/icons-material/EmailTwoTone\";\nimport {Grid} from \"@mui/material\";\nimport * as React from \"react\";\n\nconst ConfessionTableTitle = () => {\n    return (\n        <Grid item xs={12}>\n            <div className=\"confession-box-title\">\n                <EmailTwoToneIcon/>\n                <p className=\"title\">Send a Confession</p>\n            </div>\n        </Grid>\n    );\n}\n\nexport default ConfessionTableTitle;","import * as React from \"react\";\nimport {Grid} from \"@mui/material\";\nimport {styled} from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport {forwardRef, useImperativeHandle, useState} from \"react\";\n\n// styling of text box\nexport const CssTextField = styled(TextField)({\n    '& label.Mui-focused': {\n        color: '#4a5465',\n    },\n    '& .MuiInput-underline:after': {\n        borderBottomColor: '#dbdbdb',\n    },\n    '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n            borderColor: '#dbdbdb',\n        },\n        '&:hover fieldset': {\n            borderColor: '#dbdbdb',\n        },\n        '&.Mui-focused fieldset': {\n            borderColor: '#4a5465',\n        },\n    },\n});\n\nconst ConfessionTextField = forwardRef((props, ref) => {\n\n    const [confession, setConfession] = useState('');\n\n    // child function so parent could use it.\n    useImperativeHandle(ref, () => ({\n        clear: () => {\n            setConfession(\"\");\n            console.log(\"cleared confession!\");\n        }\n    }));\n\n    return (\n        <Grid item xs={12}>\n            <CssTextField fullWidth multiline id=\"fullWidth\"\n                          size=\"medium\"\n                          rows={4}\n                          label=\"write what's on your mind\"\n                          variant=\"outlined\"\n                          value={confession}\n                          name=\"entry.638196057\"\n                          onChange={(event) => {\n                              setConfession(event.target.value)\n                              props.onSaveConfessionText(event.target.value)\n                          }}\n            />\n        </Grid>\n    );\n});\n\nexport default ConfessionTextField;","import \"./NumberSwitch.css\"\nimport React, {forwardRef, useState, useImperativeHandle} from 'react';\nimport Grid from \"@mui/material/Grid\";\nimport {CssTextField} from \"./ConfessionTextField\";\nimport {alpha, styled} from '@mui/material/styles';\nimport Switch from \"@mui/material/Switch\";\n\nconst label = {inputProps: {'aria-label': 'confession number switch'}};\n\nconst CostumedSwitch = styled(Switch)(({theme}) => ({\n    \"& .MuiSwitch-switchBase.Mui-checked\": {\n        color: \"#84bcd4\",\n        \"&:hover\": {\n            backgroundColor: alpha(\"#84bcd4\", theme.palette.action.hoverOpacity)\n        }\n    },\n    \"& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track\": {\n        backgroundColor: \"#84bcd4\"\n    }\n}));\nconst NumberSwitch = forwardRef((props, ref) => {\n\n    const [disabled, setDisabled] = useState(true);\n    const [text, setText] = useState('');\n\n    function handleConfessionNumberBox(event) {\n        setDisabled(!disabled);\n        onChangeOfTextBox(event);\n    }\n\n    // child function so parent could use it.\n    useImperativeHandle(ref, () => ({\n        clear: () => {\n            setText(\"\");\n            if (disabled) {\n                setDisabled(true);\n            } else {\n                setDisabled(false);\n            }\n        }\n    }));\n\n    function onChangeOfTextBox(event) {\n        if (!disabled) {\n            setText(event.target.value);\n        } else {\n            setText('');\n        }\n        props.onCommentToExistingConfession(event.target.value);\n    }\n\n    return (\n        <Grid container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              className=\"switch-box\"\n        >\n            <p className=\"switch-text\">comment for an existing confession?</p>\n            <CostumedSwitch {...label}\n                            onChange={(event) => handleConfessionNumberBox(event)}/>\n            <CssTextField id=\"outlined-basic\"\n                          label=\"* number\"\n                          variant=\"outlined\"\n                          className=\"text-field\"\n                          type=\"number\"\n                          disabled={disabled}\n                          onChange={(event) => onChangeOfTextBox(event)}\n                          value={text}\n            />\n        </Grid>\n    );\n});\n\nexport default NumberSwitch;","import './ConfessionsTable.css';\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport {Grid} from \"@mui/material\";\nimport SendIcon from '@mui/icons-material/Send';\nimport {styled} from '@mui/material/styles';\nimport ConfessionTableTitle from \"./ConfessionTable/ConfessionTableTitle\"\nimport ConfessionTextField from \"./ConfessionTable/ConfessionTextField\"\nimport NumberSwitch from \"./ConfessionTable/NumberSwitch\";\nimport {useState, useRef} from \"react\";\n\nconst ColorButton = styled(Button)(({theme}) => ({\n    color: theme.palette.getContrastText(\"#4a5465\"),\n    backgroundColor: \"#4a5465\",\n    '&:hover': {\n        backgroundColor: \"#85bfd0\",\n    },\n}));\n\nconst ConfessionsTable = () => {\n\n    const [confession, setConfession] = useState('');\n    const [ID, setID] = useState('');\n    const numberSwitchRef = useRef();\n    const confessionTextRef = useRef();\n\n    const onSaveConfessionText = (data) => {\n        setConfession(data);\n    }\n\n    const onCommentToExistingConfession = (data) => {\n        setID(data);\n    }\n\n    const constructFormData = (confessionJSON) => {\n        let formData = new FormData();\n        let text = confessionJSON.text;\n        if (confessionJSON.isComment) {\n            text = \"בתגובה ל\" + confessionJSON.ID + \": \" + text\n        }\n        formData.append('entry.638196057', text);\n        return formData;\n    }\n\n    const onSubmission = () => {\n\n        let confessionJSON = {\n            text: confession,\n            isComment: (ID !== ''),\n            ID: ID\n        }\n\n        let formData = constructFormData(confessionJSON);\n\n        // into google forms\n        fetch(\"https://docs.google.com/forms/u/0/d/e/1FAIpQLSd_Fn2K-cqZophaEL4dW8ZRIcHbfok2dhsLjojCP1H5ekTulQ/formResponse\",\n            {\n                body: formData,\n                method: 'post',\n                mode: 'no-cors'\n            });\n\n        // into firebase\n        fetch('https://huji-confessions-default-rtdb.europe-west1.firebasedatabase.app/confessions.json', {\n            method: 'POST',\n            body: JSON.stringify(confessionJSON.confessions),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        // clearing data\n        numberSwitchRef.current.clear();\n        confessionTextRef.current.clear();\n        setID('');\n        setConfession('');\n\n    }\n\n    return (\n        <div className=\"content-table\">\n            <Grid container spacing={2}>\n                <ConfessionTableTitle/>\n                <ConfessionTextField onSaveConfessionText={onSaveConfessionText} ref={confessionTextRef}/>\n                <NumberSwitch onCommentToExistingConfession={onCommentToExistingConfession} ref={numberSwitchRef}/>\n                <Grid item xs={12}>\n                    <ColorButton variant=\"contained\" fullWidth\n                                 onClick={onSubmission}\n                                 endIcon={<SendIcon/>}\n                    >\n                        submit\n                    </ColorButton>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default ConfessionsTable;","import './EmergencyTable.css';\nimport * as React from \"react\";\n\nconst EmergencyTable = () => {\n    return (\n        <div className=\"content-table\">\n\n        </div>\n    );\n}\n\nexport default EmergencyTable;","import ConfessionsTable from \"./ConfessionsTable\";\nimport './Table.css';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport EmergencyTable from \"./EmergencyTable\";\nimport * as React from \"react\";\n\nconst Table = () => {\n    return (\n        <div className=\"main-table\">\n            <Switch>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/home\" component={ConfessionsTable}/>\n                </Route>\n                <Route exact path=\"/home\" component={ConfessionsTable}/>\n                <Route exact path=\"/hotlines\" component={EmergencyTable}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default Table;","import './Footer.css';\n\nconst Footer = () => {\n    return (\n        <div className=\"footer-main\">\n            <div className=\"text-width\">\n                <div className=\"huji-text\">\n                    We are not affiliated, associated, authorized, endorsed by, or in any way officially connected with The\n                    Hebrew University Of Jerusalem, or any of its subsidiaries or its affiliates. The official HUJI\n                    website can be <a href=\"https://new.huji.ac.il/\">here</a>. <br></br>\n                </div>\n                <div className=\"admin-text\">\n                    Confessions are moderated by anonymous admins.\n                    This site was developed by Rina Karnauch.\n                </div>\n                <div className=\"rights-text\">\n                    All Rights Reserved © 2021\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import './MainContent.css';\nimport * as React from \"react\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport Upnav from \"./Upnav\";\nimport Table from \"./Table\";\nimport Footer from \"./Footer\";\n\nconst MainContent = () => {\n    return (\n        <div>\n            <Header/>\n            <Upnav/>\n            <div className=\"flex-container\">\n                <Sidebar/>\n                <Table/>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default MainContent;\n","import './App.css';\nimport * as React from 'react';\nimport MainContent from \"./components/MainContent\";\nimport Footer from \"./components/Footer\";\n\n\nexport default function App() {\n    return (\n        <div>\n            <MainContent/>\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n    ,\n    document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}